[
    {
        "id": "5ec824872cd94a31",
        "type": "subflow",
        "name": "AC",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 140,
                "wires": [
                    {
                        "id": "d4d4d85cfa3381e0"
                    },
                    {
                        "id": "aeebdc64229a5257"
                    },
                    {
                        "id": "4262a377b349288b"
                    },
                    {
                        "id": "7bfc45a210da7543"
                    },
                    {
                        "id": "94a125713cf50d2b"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 420,
                "y": 80,
                "wires": [
                    {
                        "id": "d4d4d85cfa3381e0",
                        "port": 0
                    }
                ]
            },
            {
                "x": 420,
                "y": 120,
                "wires": [
                    {
                        "id": "94a125713cf50d2b",
                        "port": 0
                    }
                ]
            },
            {
                "x": 420,
                "y": 160,
                "wires": [
                    {
                        "id": "aeebdc64229a5257",
                        "port": 0
                    }
                ]
            },
            {
                "x": 420,
                "y": 200,
                "wires": [
                    {
                        "id": "4262a377b349288b",
                        "port": 0
                    }
                ]
            },
            {
                "x": 420,
                "y": 240,
                "wires": [
                    {
                        "id": "7bfc45a210da7543",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "d4d4d85cfa3381e0",
        "type": "function",
        "z": "5ec824872cd94a31",
        "name": "开关",
        "func": "// Pass only messages coming from homekit node\nif (msg.hap.context !== undefined) {\n    if (msg.payload.Active !== undefined) {\n        flow.set(\"state\", msg.payload.Active);\n        node.log('发送空调开关：' + msg.payload.Active);\n        if (Boolean(msg.payload.Active) === true) {\n            return { payload: true };\n        }\n        else if (Boolean(msg.payload.Active) === false) {\n            return { payload: false };\n        }\n    }\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "aeebdc64229a5257",
        "type": "function",
        "z": "5ec824872cd94a31",
        "name": "设置制热温度",
        "func": "// Pass only messages coming from homekit node\nif (msg.hap.context !== undefined) {\n    if (msg.payload.HeatingThresholdTemperature !== undefined) {\n        node.log('发送空调制热温度：' + msg.payload.HeatingThresholdTemperature);\n        return { payload: msg.payload.HeatingThresholdTemperature };\n    }\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "4262a377b349288b",
        "type": "function",
        "z": "5ec824872cd94a31",
        "name": "设置制冷温度",
        "func": "// Pass only messages coming from homekit node\nif (msg.hap.context !== undefined) {\n    if (msg.payload.CoolingThresholdTemperature !== undefined) {\n        node.log('发送空调制冷温度：' + msg.payload.CoolingThresholdTemperature);\n        return { payload: msg.payload.CoolingThresholdTemperature };\n    }\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "7bfc45a210da7543",
        "type": "function",
        "z": "5ec824872cd94a31",
        "name": "风速",
        "func": "// Pass only messages coming from homekit node\nif (msg.hap.context !== undefined) {\n    var value = 0;\n    if (msg.payload.RotationSpeed !== undefined) {\n        if (msg.payload.RotationSpeed > 0 && msg.payload.RotationSpeed <= 34)\n        {\n            value = 1;\n        }\n        else if (msg.payload.RotationSpeed > 34 && msg.payload.RotationSpeed <= 67)\n        {\n            value = 3;\n        }\n        else if (msg.payload.RotationSpeed > 67 && msg.payload.RotationSpeed <= 101)\n        {\n            value = 5;\n        }\n    }\n    // reset rotationspeed when shutdown.\n    if (msg.payload.Active !== undefined) {\n        if (Boolean(msg.payload.Active) === false) {\n            value = 0;\n        }\n    }\n    node.log('发送空调风速：' + value);\n    return { payload: value };\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "94a125713cf50d2b",
        "type": "function",
        "z": "5ec824872cd94a31",
        "name": "模式",
        "func": "// Pass only messages coming from homekit node\nif (msg.hap.context !== undefined) {\n    if (msg.payload.TargetHeaterCoolerState !== undefined) {\n        if (msg.payload.TargetHeaterCoolerState === 1) {\n            node.log('发送空调模式：制热');\n            return { payload: 1 };\n        }\n        else if (msg.payload.TargetHeaterCoolerState === 2) {\n            node.log('发送空调模式：制冷');\n            return { payload: 3 };\n        }\n    }\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 210,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "5207b905716868ba",
        "type": "tab",
        "label": "客厅",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "92cca2fca2f99551",
        "type": "homekit-service",
        "z": "5207b905716868ba",
        "isParent": true,
        "hostType": "0",
        "bridge": "b40c437ba7dc34d1",
        "accessoryId": "",
        "parentService": "",
        "name": "主灯",
        "serviceName": "Lightbulb",
        "topic": "",
        "filter": false,
        "manufacturer": "NRCHKB",
        "model": "1.4.3",
        "serialNo": "Default Serial Number",
        "firmwareRev": "1.4.3",
        "hardwareRev": "1.4.3",
        "softwareRev": "1.4.3",
        "cameraConfigVideoProcessor": "ffmpeg",
        "cameraConfigSource": "",
        "cameraConfigStillImageSource": "",
        "cameraConfigMaxStreams": 2,
        "cameraConfigMaxWidth": 1280,
        "cameraConfigMaxHeight": 720,
        "cameraConfigMaxFPS": 10,
        "cameraConfigMaxBitrate": 300,
        "cameraConfigVideoCodec": "libx264",
        "cameraConfigAudioCodec": "libfdk_aac",
        "cameraConfigAudio": false,
        "cameraConfigPacketSize": 1316,
        "cameraConfigVerticalFlip": false,
        "cameraConfigHorizontalFlip": false,
        "cameraConfigMapVideo": "0:0",
        "cameraConfigMapAudio": "0:1",
        "cameraConfigVideoFilter": "scale=1280:720",
        "cameraConfigAdditionalCommandLine": "-tune zerolatency",
        "cameraConfigDebug": false,
        "cameraConfigSnapshotOutput": "disabled",
        "cameraConfigInterfaceName": "",
        "characteristicProperties": "{}",
        "waitForSetupMsg": false,
        "outputs": 2,
        "x": 790,
        "y": 180,
        "wires": [
            [
                "c30cf87e4cc1b112"
            ],
            []
        ]
    },
    {
        "id": "67db20ad9bb0faa8",
        "type": "homekit-service",
        "z": "5207b905716868ba",
        "isParent": true,
        "hostType": "0",
        "bridge": "b40c437ba7dc34d1",
        "accessoryId": "",
        "parentService": "",
        "name": "灯带",
        "serviceName": "Lightbulb",
        "topic": "",
        "filter": false,
        "manufacturer": "NRCHKB",
        "model": "1.4.3",
        "serialNo": "Default Serial Number",
        "firmwareRev": "1.4.3",
        "hardwareRev": "1.4.3",
        "softwareRev": "1.4.3",
        "cameraConfigVideoProcessor": "ffmpeg",
        "cameraConfigSource": "",
        "cameraConfigStillImageSource": "",
        "cameraConfigMaxStreams": 2,
        "cameraConfigMaxWidth": 1280,
        "cameraConfigMaxHeight": 720,
        "cameraConfigMaxFPS": 10,
        "cameraConfigMaxBitrate": 300,
        "cameraConfigVideoCodec": "libx264",
        "cameraConfigAudioCodec": "libfdk_aac",
        "cameraConfigAudio": false,
        "cameraConfigPacketSize": 1316,
        "cameraConfigVerticalFlip": false,
        "cameraConfigHorizontalFlip": false,
        "cameraConfigMapVideo": "0:0",
        "cameraConfigMapAudio": "0:1",
        "cameraConfigVideoFilter": "scale=1280:720",
        "cameraConfigAdditionalCommandLine": "-tune zerolatency",
        "cameraConfigDebug": false,
        "cameraConfigSnapshotOutput": "disabled",
        "cameraConfigInterfaceName": "",
        "characteristicProperties": "{}",
        "waitForSetupMsg": false,
        "outputs": 2,
        "x": 790,
        "y": 280,
        "wires": [
            [
                "57e9f1bb31a05cb2"
            ],
            []
        ]
    },
    {
        "id": "9ff8e65d30640293",
        "type": "homekit-service",
        "z": "5207b905716868ba",
        "isParent": true,
        "hostType": "0",
        "bridge": "b40c437ba7dc34d1",
        "accessoryId": "",
        "parentService": "",
        "name": "筒灯",
        "serviceName": "Lightbulb",
        "topic": "",
        "filter": false,
        "manufacturer": "NRCHKB",
        "model": "1.4.3",
        "serialNo": "Default Serial Number",
        "firmwareRev": "1.4.3",
        "hardwareRev": "1.4.3",
        "softwareRev": "1.4.3",
        "cameraConfigVideoProcessor": "ffmpeg",
        "cameraConfigSource": "",
        "cameraConfigStillImageSource": "",
        "cameraConfigMaxStreams": 2,
        "cameraConfigMaxWidth": 1280,
        "cameraConfigMaxHeight": 720,
        "cameraConfigMaxFPS": 10,
        "cameraConfigMaxBitrate": 300,
        "cameraConfigVideoCodec": "libx264",
        "cameraConfigAudioCodec": "libfdk_aac",
        "cameraConfigAudio": false,
        "cameraConfigPacketSize": 1316,
        "cameraConfigVerticalFlip": false,
        "cameraConfigHorizontalFlip": false,
        "cameraConfigMapVideo": "0:0",
        "cameraConfigMapAudio": "0:1",
        "cameraConfigVideoFilter": "scale=1280:720",
        "cameraConfigAdditionalCommandLine": "-tune zerolatency",
        "cameraConfigDebug": false,
        "cameraConfigSnapshotOutput": "disabled",
        "cameraConfigInterfaceName": "",
        "characteristicProperties": "{}",
        "waitForSetupMsg": false,
        "outputs": 2,
        "x": 790,
        "y": 380,
        "wires": [
            [
                "ec247d4fc8e2c4f4"
            ],
            []
        ]
    },
    {
        "id": "d45da27eeb02cfaf",
        "type": "knxUltimate",
        "z": "5207b905716868ba",
        "server": "1d670c832649ebb6",
        "topic": "12/1/131",
        "setTopicType": "str",
        "outputtopic": "",
        "dpt": "1.001",
        "initialread": "1",
        "notifyreadrequest": false,
        "notifyresponse": true,
        "notifywrite": true,
        "notifyreadrequestalsorespondtobus": false,
        "notifyreadrequestalsorespondtobusdefaultvalueifnotinitialized": "0",
        "listenallga": false,
        "name": "开关反馈",
        "outputtype": "update",
        "outputRBE": "false",
        "inputRBE": "true",
        "formatmultiplyvalue": 1,
        "formatnegativevalue": "leave",
        "formatdecimalsvalue": 999,
        "passthrough": "no",
        "x": 160,
        "y": 520,
        "wires": [
            [
                "a400ba7f1bc00dc2",
                "d82c1e5f8afb78f9",
                "efb34919a8ea36e3",
                "b8730c3044dce17e"
            ]
        ]
    },
    {
        "id": "d82c1e5f8afb78f9",
        "type": "knxUltimate",
        "z": "5207b905716868ba",
        "server": "1d670c832649ebb6",
        "topic": "12/2/131",
        "setTopicType": "str",
        "outputtopic": "",
        "dpt": "5.100",
        "initialread": "1",
        "notifyreadrequest": false,
        "notifyresponse": true,
        "notifywrite": true,
        "notifyreadrequestalsorespondtobus": false,
        "notifyreadrequestalsorespondtobusdefaultvalueifnotinitialized": "0",
        "listenallga": false,
        "name": "模式反馈",
        "outputtype": "read",
        "outputRBE": "false",
        "inputRBE": "true",
        "formatmultiplyvalue": 1,
        "formatnegativevalue": "leave",
        "formatdecimalsvalue": 999,
        "passthrough": "no",
        "x": 390,
        "y": 580,
        "wires": [
            [
                "840b8867cb1dd539"
            ]
        ]
    },
    {
        "id": "efb34919a8ea36e3",
        "type": "knxUltimate",
        "z": "5207b905716868ba",
        "server": "1d670c832649ebb6",
        "topic": "12/3/131",
        "setTopicType": "str",
        "outputtopic": "",
        "dpt": "5.100",
        "initialread": "1",
        "notifyreadrequest": false,
        "notifyresponse": true,
        "notifywrite": true,
        "notifyreadrequestalsorespondtobus": false,
        "notifyreadrequestalsorespondtobusdefaultvalueifnotinitialized": "0",
        "listenallga": false,
        "name": "风速反馈",
        "outputtype": "read",
        "outputRBE": "false",
        "inputRBE": "true",
        "formatmultiplyvalue": 1,
        "formatnegativevalue": "leave",
        "formatdecimalsvalue": 999,
        "passthrough": "no",
        "x": 390,
        "y": 640,
        "wires": [
            [
                "35d6052523a9bdb9"
            ]
        ]
    },
    {
        "id": "b8730c3044dce17e",
        "type": "knxUltimate",
        "z": "5207b905716868ba",
        "server": "1d670c832649ebb6",
        "topic": "12/4/131",
        "setTopicType": "str",
        "outputtopic": "",
        "dpt": "9.001",
        "initialread": "3",
        "notifyreadrequest": false,
        "notifyresponse": true,
        "notifywrite": true,
        "notifyreadrequestalsorespondtobus": false,
        "notifyreadrequestalsorespondtobusdefaultvalueifnotinitialized": "0",
        "listenallga": false,
        "name": "设置温度反馈",
        "outputtype": "read",
        "outputRBE": "false",
        "inputRBE": "true",
        "formatmultiplyvalue": 1,
        "formatnegativevalue": "leave",
        "formatdecimalsvalue": 999,
        "passthrough": "no",
        "x": 400,
        "y": 700,
        "wires": [
            [
                "3dc6aac4ae8cf75c"
            ]
        ]
    },
    {
        "id": "5ed7340fb82f3da1",
        "type": "knxUltimate",
        "z": "5207b905716868ba",
        "server": "1d670c832649ebb6",
        "topic": "12/5/131",
        "setTopicType": "str",
        "outputtopic": "",
        "dpt": "9.001",
        "initialread": "1",
        "notifyreadrequest": false,
        "notifyresponse": true,
        "notifywrite": true,
        "notifyreadrequestalsorespondtobus": false,
        "notifyreadrequestalsorespondtobusdefaultvalueifnotinitialized": "0",
        "listenallga": false,
        "name": "实际温度反馈",
        "outputtype": "read",
        "outputRBE": "false",
        "inputRBE": "true",
        "formatmultiplyvalue": 1,
        "formatnegativevalue": "leave",
        "formatdecimalsvalue": 999,
        "passthrough": "no",
        "x": 400,
        "y": 760,
        "wires": [
            [
                "7120dda8b5074033"
            ]
        ]
    },
    {
        "id": "7120dda8b5074033",
        "type": "function",
        "z": "5207b905716868ba",
        "name": "室内温度反馈",
        "func": "node.log('收到室内温度反馈:'+msg.payload);\nreturn { payload: { \"CurrentTemperature\": msg.payload }}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 760,
        "wires": [
            [
                "29410541a718daf6"
            ]
        ]
    },
    {
        "id": "35d6052523a9bdb9",
        "type": "function",
        "z": "5207b905716868ba",
        "name": "风速",
        "func": "node.log('收到空调风速反馈:'+msg.payload);\nif(msg.payload === 0) \n{\n    return { payload: { \"RotationSpeed\": 0 }}\n}\nelse if(msg.payload === 1) \n{\n    return { payload: { \"RotationSpeed\": 33 } }\n}\nelse if(msg.payload === 3) \n{\n    return { payload: { \"RotationSpeed\": 66 } }\n}\nelse if(msg.payload === 5) \n{\n    return { payload: { \"RotationSpeed\": 100 } }\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 640,
        "wires": [
            [
                "29410541a718daf6"
            ]
        ]
    },
    {
        "id": "840b8867cb1dd539",
        "type": "function",
        "z": "5207b905716868ba",
        "name": "模式",
        "func": "node.log('收到空调模式反馈:'+msg.payload);\nif(msg.payload === 1) \n{\n  return { payload: { \"CurrentHeaterCoolerState\": 2, \"TargetHeaterCoolerState\": 1 }}\n} \nelse if(msg.payload === 3) \n{\n  return { payload: { \"CurrentHeaterCoolerState\": 3, \"TargetHeaterCoolerState\": 2 } }\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 580,
        "wires": [
            [
                "29410541a718daf6"
            ]
        ]
    },
    {
        "id": "29410541a718daf6",
        "type": "homekit-service",
        "z": "5207b905716868ba",
        "isParent": true,
        "hostType": "0",
        "bridge": "b40c437ba7dc34d1",
        "accessoryId": "",
        "parentService": "",
        "name": "空调",
        "serviceName": "HeaterCooler",
        "topic": "",
        "filter": false,
        "manufacturer": "IOT DREAM",
        "model": "1.3.6",
        "serialNo": "Default Serial Number",
        "firmwareRev": "1.3.6",
        "hardwareRev": "1.3.6",
        "softwareRev": "1.3.6",
        "cameraConfigVideoProcessor": "ffmpeg",
        "cameraConfigSource": "",
        "cameraConfigStillImageSource": "",
        "cameraConfigMaxStreams": 2,
        "cameraConfigMaxWidth": 1280,
        "cameraConfigMaxHeight": 720,
        "cameraConfigMaxFPS": 10,
        "cameraConfigMaxBitrate": 300,
        "cameraConfigVideoCodec": "libx264",
        "cameraConfigAudioCodec": "libfdk_aac",
        "cameraConfigAudio": false,
        "cameraConfigPacketSize": 1316,
        "cameraConfigVerticalFlip": false,
        "cameraConfigHorizontalFlip": false,
        "cameraConfigMapVideo": "0:0",
        "cameraConfigMapAudio": "0:1",
        "cameraConfigVideoFilter": "scale=1280:720",
        "cameraConfigAdditionalCommandLine": "-tune zerolatency",
        "cameraConfigDebug": false,
        "cameraConfigSnapshotOutput": "disabled",
        "cameraConfigInterfaceName": "",
        "characteristicProperties": "{     \"TargetHeaterCoolerState\": {         \"validValues\": [             1,             2         ]     },     \"CurrentHeaterCoolerState\": {         \"validValues\": [             0,             2,             3         ]     },     \"HeatingThresholdTemperature\": {         \"minValue\": 16,         \"maxValue\": 32,         \"minStep\": 1     },     \"CoolingThresholdTemperature\": {         \"minValue\": 16,         \"maxValue\": 32,         \"minStep\": 1     },     \"RotationSpeed\": {         \"minValue\": 0,         \"maxValue\": 100,         \"minStep\": 33     } }",
        "waitForSetupMsg": false,
        "outputs": 2,
        "x": 1030,
        "y": 660,
        "wires": [
            [
                "8934cfb420189506"
            ],
            []
        ]
    },
    {
        "id": "8934cfb420189506",
        "type": "subflow:5ec824872cd94a31",
        "z": "5207b905716868ba",
        "name": "",
        "env": [],
        "x": 1230,
        "y": 660,
        "wires": [
            [
                "34ea192f3631265b"
            ],
            [
                "86d435753f3e713b"
            ],
            [
                "be12c82669a7c520"
            ],
            [
                "be12c82669a7c520"
            ],
            [
                "431f89f5dd77ee96"
            ]
        ]
    },
    {
        "id": "3dc6aac4ae8cf75c",
        "type": "function",
        "z": "5207b905716868ba",
        "name": "设置温度反馈",
        "func": "node.log('收到空调设置温度反馈:'+msg.payload);\nvar value  = msg.payload;\nvar HeatingThresholdTemperature = {};\nvar CoolingThresholdTemperature = {};\nHeatingThresholdTemperature.payload = {\"HeatingThresholdTemperature\":value}\nCoolingThresholdTemperature.payload = {\"CoolingThresholdTemperature\":value}\nreturn [HeatingThresholdTemperature,CoolingThresholdTemperature];",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 700,
        "wires": [
            [
                "29410541a718daf6"
            ],
            [
                "29410541a718daf6"
            ]
        ]
    },
    {
        "id": "34ea192f3631265b",
        "type": "knxUltimate",
        "z": "5207b905716868ba",
        "server": "1d670c832649ebb6",
        "topic": "12/1/3",
        "setTopicType": "str",
        "outputtopic": "",
        "dpt": "1.001",
        "initialread": "0",
        "notifyreadrequest": false,
        "notifyresponse": false,
        "notifywrite": true,
        "notifyreadrequestalsorespondtobus": false,
        "notifyreadrequestalsorespondtobusdefaultvalueifnotinitialized": "0",
        "listenallga": false,
        "name": "开关地址",
        "outputtype": "write",
        "outputRBE": "true",
        "inputRBE": "false",
        "formatmultiplyvalue": 1,
        "formatnegativevalue": "leave",
        "formatdecimalsvalue": 999,
        "passthrough": "no",
        "x": 1530,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "86d435753f3e713b",
        "type": "knxUltimate",
        "z": "5207b905716868ba",
        "server": "1d670c832649ebb6",
        "topic": "12/2/3",
        "setTopicType": "str",
        "outputtopic": "",
        "dpt": "5.100",
        "initialread": "0",
        "notifyreadrequest": false,
        "notifyresponse": false,
        "notifywrite": true,
        "notifyreadrequestalsorespondtobus": false,
        "notifyreadrequestalsorespondtobusdefaultvalueifnotinitialized": "0",
        "listenallga": false,
        "name": "模式地址",
        "outputtype": "write",
        "outputRBE": "true",
        "inputRBE": "false",
        "formatmultiplyvalue": 1,
        "formatnegativevalue": "leave",
        "formatdecimalsvalue": 999,
        "passthrough": "no",
        "x": 1530,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "431f89f5dd77ee96",
        "type": "knxUltimate",
        "z": "5207b905716868ba",
        "server": "1d670c832649ebb6",
        "topic": "12/3/3",
        "setTopicType": "str",
        "outputtopic": "",
        "dpt": "5.100",
        "initialread": "0",
        "notifyreadrequest": false,
        "notifyresponse": false,
        "notifywrite": true,
        "notifyreadrequestalsorespondtobus": false,
        "notifyreadrequestalsorespondtobusdefaultvalueifnotinitialized": "0",
        "listenallga": false,
        "name": "风速地址",
        "outputtype": "write",
        "outputRBE": "true",
        "inputRBE": "false",
        "formatmultiplyvalue": 1,
        "formatnegativevalue": "leave",
        "formatdecimalsvalue": 999,
        "passthrough": "no",
        "x": 1530,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "be12c82669a7c520",
        "type": "knxUltimate",
        "z": "5207b905716868ba",
        "server": "1d670c832649ebb6",
        "topic": "12/4/3",
        "setTopicType": "str",
        "outputtopic": "",
        "dpt": "9.001",
        "initialread": "0",
        "notifyreadrequest": false,
        "notifyresponse": false,
        "notifywrite": true,
        "notifyreadrequestalsorespondtobus": false,
        "notifyreadrequestalsorespondtobusdefaultvalueifnotinitialized": "0",
        "listenallga": false,
        "name": "目标温度地址",
        "outputtype": "write",
        "outputRBE": "true",
        "inputRBE": "false",
        "formatmultiplyvalue": 1,
        "formatnegativevalue": "leave",
        "formatdecimalsvalue": 999,
        "passthrough": "no",
        "x": 1540,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "6d1c04a4272269f1",
        "type": "inject",
        "z": "5207b905716868ba",
        "name": "循环获取温度",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 760,
        "wires": [
            [
                "5ed7340fb82f3da1"
            ]
        ]
    },
    {
        "id": "a400ba7f1bc00dc2",
        "type": "function",
        "z": "5207b905716868ba",
        "name": "开关",
        "func": "node.log('收到空调开关反馈:'+msg.payload);\nif (Boolean(msg.payload) === true) {\n    return { payload: { \"Active\": 1 } }\n}\nelse if (Boolean(msg.payload) === false) {\n    return { payload: { \"Active\": 0 } }\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 520,
        "wires": [
            [
                "29410541a718daf6"
            ]
        ]
    },
    {
        "id": "4d1dafb2f77e0d57",
        "type": "homekit-service",
        "z": "5207b905716868ba",
        "isParent": true,
        "hostType": "0",
        "bridge": "b40c437ba7dc34d1",
        "accessoryId": "",
        "parentService": "",
        "name": "布帘",
        "serviceName": "WindowCovering",
        "topic": "",
        "filter": false,
        "manufacturer": "IOT DREAM",
        "model": "1.3.6",
        "serialNo": "Default Serial Number",
        "firmwareRev": "1.3.6",
        "hardwareRev": "1.3.6",
        "softwareRev": "1.3.6",
        "cameraConfigVideoProcessor": "ffmpeg",
        "cameraConfigSource": "",
        "cameraConfigStillImageSource": "",
        "cameraConfigMaxStreams": 2,
        "cameraConfigMaxWidth": 1280,
        "cameraConfigMaxHeight": 720,
        "cameraConfigMaxFPS": 10,
        "cameraConfigMaxBitrate": 300,
        "cameraConfigVideoCodec": "libx264",
        "cameraConfigAudioCodec": "libfdk_aac",
        "cameraConfigAudio": false,
        "cameraConfigPacketSize": 1316,
        "cameraConfigVerticalFlip": false,
        "cameraConfigHorizontalFlip": false,
        "cameraConfigMapVideo": "0:0",
        "cameraConfigMapAudio": "0:1",
        "cameraConfigVideoFilter": "scale=1280:720",
        "cameraConfigAdditionalCommandLine": "-tune zerolatency",
        "cameraConfigDebug": false,
        "cameraConfigSnapshotOutput": "disabled",
        "cameraConfigInterfaceName": "",
        "characteristicProperties": "",
        "waitForSetupMsg": false,
        "outputs": 2,
        "x": 790,
        "y": 1460,
        "wires": [
            [],
            [
                "523eccc030d6539d"
            ]
        ]
    },
    {
        "id": "76963f2ecd42abd6",
        "type": "homekit-service",
        "z": "5207b905716868ba",
        "isParent": true,
        "hostType": "0",
        "bridge": "b40c437ba7dc34d1",
        "accessoryId": "",
        "parentService": "",
        "name": "纱帘",
        "serviceName": "WindowCovering",
        "topic": "",
        "filter": false,
        "manufacturer": "IOT DREAM",
        "model": "1.3.6",
        "serialNo": "Default Serial Number",
        "firmwareRev": "1.3.6",
        "hardwareRev": "1.3.6",
        "softwareRev": "1.3.6",
        "cameraConfigVideoProcessor": "ffmpeg",
        "cameraConfigSource": "",
        "cameraConfigStillImageSource": "",
        "cameraConfigMaxStreams": 2,
        "cameraConfigMaxWidth": 1280,
        "cameraConfigMaxHeight": 720,
        "cameraConfigMaxFPS": 10,
        "cameraConfigMaxBitrate": 300,
        "cameraConfigVideoCodec": "libx264",
        "cameraConfigAudioCodec": "libfdk_aac",
        "cameraConfigAudio": false,
        "cameraConfigPacketSize": 1316,
        "cameraConfigVerticalFlip": false,
        "cameraConfigHorizontalFlip": false,
        "cameraConfigMapVideo": "0:0",
        "cameraConfigMapAudio": "0:1",
        "cameraConfigVideoFilter": "scale=1280:720",
        "cameraConfigAdditionalCommandLine": "-tune zerolatency",
        "cameraConfigDebug": false,
        "cameraConfigSnapshotOutput": "disabled",
        "cameraConfigInterfaceName": "",
        "characteristicProperties": "",
        "waitForSetupMsg": false,
        "outputs": 2,
        "x": 790,
        "y": 1800,
        "wires": [
            [],
            [
                "9df0f640ad3015b7"
            ]
        ]
    },
    {
        "id": "1eeecf8b7891a810",
        "type": "knxUltimate",
        "z": "5207b905716868ba",
        "server": "1d670c832649ebb6",
        "topic": "1/0/23",
        "setTopicType": "str",
        "outputtopic": "",
        "dpt": "1.001",
        "initialread": "1",
        "notifyreadrequest": false,
        "notifyresponse": true,
        "notifywrite": true,
        "notifyreadrequestalsorespondtobus": false,
        "notifyreadrequestalsorespondtobusdefaultvalueifnotinitialized": "",
        "listenallga": false,
        "name": "Light Status",
        "outputtype": "update",
        "outputRBE": "false",
        "inputRBE": "true",
        "passthrough": "no",
        "x": 390,
        "y": 180,
        "wires": [
            [
                "eaa2754e7cc4054a"
            ]
        ]
    },
    {
        "id": "eaa2754e7cc4054a",
        "type": "function",
        "z": "5207b905716868ba",
        "name": "ON/OFF",
        "func": "// Verifico cosa ricevo dall'input\nif (Boolean(msg.payload) === true) {\n    return {payload:{\"On\":true}}\n}\nelse if (Boolean(msg.payload) === false)\n{\n    return {payload:{\"On\":false}}\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 180,
        "wires": [
            [
                "92cca2fca2f99551"
            ]
        ]
    },
    {
        "id": "d6ebc3240ff1e179",
        "type": "knxUltimate",
        "z": "5207b905716868ba",
        "server": "1d670c832649ebb6",
        "topic": "1/0/23",
        "setTopicType": "str",
        "outputtopic": "",
        "dpt": "1.001",
        "initialread": 0,
        "notifyreadrequest": false,
        "notifyresponse": false,
        "notifywrite": true,
        "notifyreadrequestalsorespondtobus": false,
        "notifyreadrequestalsorespondtobusdefaultvalueifnotinitialized": "",
        "listenallga": false,
        "name": "Light switch",
        "outputtype": "write",
        "outputRBE": "true",
        "inputRBE": "false",
        "passthrough": "no",
        "x": 1210,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "c30cf87e4cc1b112",
        "type": "function",
        "z": "5207b905716868ba",
        "name": "CONVERSION",
        "func": "// Pass only messages coming from homekit node\nif (msg.hap.context !== undefined) {\n    if (msg.payload.On !== undefined) {\n        if (Boolean(msg.payload.On) === true) {\n            return { payload: true };\n        }\n        else if (Boolean(msg.payload.On) === false) {\n            return { payload: false };\n        }\n    }\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 180,
        "wires": [
            [
                "d6ebc3240ff1e179"
            ]
        ]
    },
    {
        "id": "f8aa34307c8ca163",
        "type": "knxUltimate",
        "z": "5207b905716868ba",
        "server": "1d670c832649ebb6",
        "topic": "1/0/22",
        "setTopicType": "str",
        "outputtopic": "",
        "dpt": "1.001",
        "initialread": "1",
        "notifyreadrequest": false,
        "notifyresponse": true,
        "notifywrite": true,
        "notifyreadrequestalsorespondtobus": false,
        "notifyreadrequestalsorespondtobusdefaultvalueifnotinitialized": "",
        "listenallga": false,
        "name": "Light Status",
        "outputtype": "update",
        "outputRBE": "false",
        "inputRBE": "true",
        "passthrough": "no",
        "x": 390,
        "y": 280,
        "wires": [
            [
                "62b0bac052a53306"
            ]
        ]
    },
    {
        "id": "62b0bac052a53306",
        "type": "function",
        "z": "5207b905716868ba",
        "name": "ON/OFF",
        "func": "// Verifico cosa ricevo dall'input\nif (Boolean(msg.payload) === true) {\n    return {payload:{\"On\":true}}\n}\nelse if (Boolean(msg.payload) === false)\n{\n    return {payload:{\"On\":false}}\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 280,
        "wires": [
            [
                "67db20ad9bb0faa8"
            ]
        ]
    },
    {
        "id": "d4507213da16b5fc",
        "type": "knxUltimate",
        "z": "5207b905716868ba",
        "server": "1d670c832649ebb6",
        "topic": "1/0/21",
        "setTopicType": "str",
        "outputtopic": "",
        "dpt": "1.001",
        "initialread": "1",
        "notifyreadrequest": false,
        "notifyresponse": true,
        "notifywrite": true,
        "notifyreadrequestalsorespondtobus": false,
        "notifyreadrequestalsorespondtobusdefaultvalueifnotinitialized": "",
        "listenallga": false,
        "name": "Light Status",
        "outputtype": "update",
        "outputRBE": "false",
        "inputRBE": "true",
        "passthrough": "no",
        "x": 390,
        "y": 380,
        "wires": [
            [
                "c4b457c3ebbf7aa8"
            ]
        ]
    },
    {
        "id": "c4b457c3ebbf7aa8",
        "type": "function",
        "z": "5207b905716868ba",
        "name": "ON/OFF",
        "func": "// Verifico cosa ricevo dall'input\nif (Boolean(msg.payload) === true) {\n    return {payload:{\"On\":true}}\n}\nelse if (Boolean(msg.payload) === false)\n{\n    return {payload:{\"On\":false}}\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 380,
        "wires": [
            [
                "9ff8e65d30640293"
            ]
        ]
    },
    {
        "id": "64ee9f59522266eb",
        "type": "knxUltimate",
        "z": "5207b905716868ba",
        "server": "1d670c832649ebb6",
        "topic": "1/0/22",
        "setTopicType": "str",
        "outputtopic": "",
        "dpt": "1.001",
        "initialread": 0,
        "notifyreadrequest": false,
        "notifyresponse": false,
        "notifywrite": true,
        "notifyreadrequestalsorespondtobus": false,
        "notifyreadrequestalsorespondtobusdefaultvalueifnotinitialized": "",
        "listenallga": false,
        "name": "Light switch",
        "outputtype": "write",
        "outputRBE": "true",
        "inputRBE": "false",
        "passthrough": "no",
        "x": 1210,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "57e9f1bb31a05cb2",
        "type": "function",
        "z": "5207b905716868ba",
        "name": "CONVERSION",
        "func": "// Pass only messages coming from homekit node\nif (msg.hap.context !== undefined) {\n    if (msg.payload.On !== undefined) {\n        if (Boolean(msg.payload.On) === true) {\n            return { payload: true };\n        }\n        else if (Boolean(msg.payload.On) === false) {\n            return { payload: false };\n        }\n    }\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 280,
        "wires": [
            [
                "64ee9f59522266eb"
            ]
        ]
    },
    {
        "id": "b2a29f58695aa964",
        "type": "knxUltimate",
        "z": "5207b905716868ba",
        "server": "1d670c832649ebb6",
        "topic": "1/0/21",
        "setTopicType": "str",
        "outputtopic": "",
        "dpt": "1.001",
        "initialread": 0,
        "notifyreadrequest": false,
        "notifyresponse": false,
        "notifywrite": true,
        "notifyreadrequestalsorespondtobus": false,
        "notifyreadrequestalsorespondtobusdefaultvalueifnotinitialized": "",
        "listenallga": false,
        "name": "Light switch",
        "outputtype": "write",
        "outputRBE": "true",
        "inputRBE": "false",
        "passthrough": "no",
        "x": 1210,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "ec247d4fc8e2c4f4",
        "type": "function",
        "z": "5207b905716868ba",
        "name": "CONVERSION",
        "func": "// Pass only messages coming from homekit node\nif (msg.hap.context !== undefined) {\n    if (msg.payload.On !== undefined) {\n        if (Boolean(msg.payload.On) === true) {\n            return { payload: true };\n        }\n        else if (Boolean(msg.payload.On) === false) {\n            return { payload: false };\n        }\n    }\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 380,
        "wires": [
            [
                "b2a29f58695aa964"
            ]
        ]
    },
    {
        "id": "ee29bcea18d37f73",
        "type": "function",
        "z": "5207b905716868ba",
        "name": "",
        "func": "node.log('livingroom_gauze_curtains_status---------------------' + msg.payload);\nconst target = flow.get(\"livingroom_gauze_curtains_target\");\nconst sence = flow.get(\"livingroom_gauze_curtains_scene\");\nif (msg.payload !== undefined) {\n    if (sence === undefined) {\n        let current = 100 - target;\n        return { payload: { \"CurrentPosition\": current } };\n    } else {\n        let current = 100 - msg.payload;\n        if(current === 99) {\n            current = 100;\n        }\n        return { payload: { \"CurrentPosition\": current, \"TargetPosition\": current } };\n    }\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1800,
        "wires": [
            [
                "76963f2ecd42abd6"
            ]
        ]
    },
    {
        "id": "b095165d434f8340",
        "type": "knxUltimate",
        "z": "5207b905716868ba",
        "server": "1d670c832649ebb6",
        "topic": "2/1/66",
        "setTopicType": "str",
        "outputtopic": "",
        "dpt": "5.001",
        "initialread": "2",
        "notifyreadrequest": false,
        "notifyresponse": true,
        "notifywrite": true,
        "notifyreadrequestalsorespondtobus": false,
        "notifyreadrequestalsorespondtobusdefaultvalueifnotinitialized": "0",
        "listenallga": false,
        "name": "Gauze curtains status",
        "outputtype": "update",
        "outputRBE": "false",
        "inputRBE": "true",
        "formatmultiplyvalue": 1,
        "formatnegativevalue": "leave",
        "formatdecimalsvalue": 999,
        "passthrough": "no",
        "x": 380,
        "y": 1800,
        "wires": [
            [
                "ee29bcea18d37f73"
            ]
        ]
    },
    {
        "id": "9df0f640ad3015b7",
        "type": "function",
        "z": "5207b905716868ba",
        "name": "",
        "func": "const sence = flow.get(\"livingroom_gauze_curtains_scene\");\nif (msg.hap.context !== undefined) {\n    if (msg.payload.TargetPosition !== undefined) {\n        let position = 100 - msg.payload.TargetPosition;\n        if (sence === undefined) {\n            flow.set(\"livingroom_gauze_curtains_target\", position);\n            return { payload: position };\n        } else {\n            flow.set(\"livingroom_gauze_curtains_scene\", undefined);\n        }\n    }\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 1800,
        "wires": [
            [
                "db5d529f2ffe0e90"
            ]
        ]
    },
    {
        "id": "db5d529f2ffe0e90",
        "type": "knxUltimate",
        "z": "5207b905716868ba",
        "server": "1d670c832649ebb6",
        "topic": "2/1/66",
        "setTopicType": "str",
        "outputtopic": "",
        "dpt": "5.001",
        "initialread": 0,
        "notifyreadrequest": false,
        "notifyresponse": false,
        "notifywrite": true,
        "notifyreadrequestalsorespondtobus": false,
        "notifyreadrequestalsorespondtobusdefaultvalueifnotinitialized": "0",
        "listenallga": false,
        "name": "Gauze curtains",
        "outputtype": "write",
        "outputRBE": "false",
        "inputRBE": "false",
        "formatmultiplyvalue": 1,
        "formatnegativevalue": "leave",
        "formatdecimalsvalue": 999,
        "passthrough": "no",
        "x": 1180,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "2c2a42ccbda74038",
        "type": "function",
        "z": "5207b905716868ba",
        "name": "Clear gauze curtains lock",
        "func": "node.log('receive livingroom gauze curtains sence control:'+msg.payload);\n\nconst source = flow.get(\"livingroom_gauze_curtains_lock\");\n\nif(msg.payload !== 0) {\n    if (source === undefined) {\n        return msg;\n    }\n} else {\n    flow.set(\"livingroom_gauze_curtains_lock\", undefined);\n    flow.set(\"livingroom_gauze_curtains_scene\" , true);\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 1900,
        "wires": [
            [
                "36e917d0e65aab82"
            ]
        ]
    },
    {
        "id": "36e917d0e65aab82",
        "type": "trigger",
        "z": "5207b905716868ba",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "15",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 760,
        "y": 1900,
        "wires": [
            [
                "d2f1e9990f3e2f96"
            ]
        ]
    },
    {
        "id": "d2f1e9990f3e2f96",
        "type": "trigger",
        "z": "5207b905716868ba",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "500",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 970,
        "y": 1900,
        "wires": [
            [
                "95a0f46b41261bb0"
            ]
        ]
    },
    {
        "id": "95a0f46b41261bb0",
        "type": "function",
        "z": "5207b905716868ba",
        "name": "Set gauze curtains lock",
        "func": "node.log('set livingroom gauze curtains lock:'+msg.payload);\nflow.set(\"livingroom_gauze_curtains_lock\" , true);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 1900,
        "wires": [
            [
                "12c40f8c81bdfabd"
            ]
        ]
    },
    {
        "id": "9bbf54810731b3a9",
        "type": "knxUltimate",
        "z": "5207b905716868ba",
        "server": "1d670c832649ebb6",
        "topic": "2/0/66",
        "setTopicType": "str",
        "outputtopic": "",
        "dpt": "5.100",
        "initialread": "0",
        "notifyreadrequest": false,
        "notifyresponse": true,
        "notifywrite": true,
        "notifyreadrequestalsorespondtobus": false,
        "notifyreadrequestalsorespondtobusdefaultvalueifnotinitialized": "0",
        "listenallga": false,
        "name": "Gauze curtains scene status",
        "outputtype": "write",
        "outputRBE": "false",
        "inputRBE": "false",
        "formatmultiplyvalue": 1,
        "formatnegativevalue": "leave",
        "formatdecimalsvalue": 999,
        "passthrough": "no",
        "x": 220,
        "y": 1900,
        "wires": [
            [
                "2c2a42ccbda74038"
            ]
        ]
    },
    {
        "id": "12c40f8c81bdfabd",
        "type": "knxUltimate",
        "z": "5207b905716868ba",
        "server": "1d670c832649ebb6",
        "topic": "2/0/66",
        "setTopicType": "str",
        "outputtopic": "",
        "dpt": "5.100",
        "initialread": "0",
        "notifyreadrequest": false,
        "notifyresponse": false,
        "notifywrite": true,
        "notifyreadrequestalsorespondtobus": false,
        "notifyreadrequestalsorespondtobusdefaultvalueifnotinitialized": "0",
        "listenallga": false,
        "name": "Gauze curtains scene",
        "outputtype": "write",
        "outputRBE": "false",
        "inputRBE": "false",
        "formatmultiplyvalue": 1,
        "formatnegativevalue": "leave",
        "formatdecimalsvalue": 999,
        "passthrough": "no",
        "x": 1500,
        "y": 1900,
        "wires": [
            []
        ]
    },
    {
        "id": "a2cbab9841418efb",
        "type": "function",
        "z": "5207b905716868ba",
        "name": "",
        "func": "node.log('livingroom_cloth_curtains_status---------------------' + msg.payload);\nconst target = flow.get(\"livingroom_cloth_curtains_target\");\nconst sence = flow.get(\"livingroom_cloth_curtains_scene\");\nif (msg.payload !== undefined) {\n    if (sence === undefined) {\n        let current = 100 - target;\n        return { payload: { \"CurrentPosition\": current } };\n    } else {\n        let current = 100 - msg.payload;\n        if(current === 99) {\n            current = 100;\n        }\n        return { payload: { \"CurrentPosition\": current, \"TargetPosition\": current } };\n    }\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1460,
        "wires": [
            [
                "4d1dafb2f77e0d57"
            ]
        ]
    },
    {
        "id": "5ebc21141a880256",
        "type": "knxUltimate",
        "z": "5207b905716868ba",
        "server": "1d670c832649ebb6",
        "topic": "2/1/65",
        "setTopicType": "str",
        "outputtopic": "",
        "dpt": "5.001",
        "initialread": "2",
        "notifyreadrequest": false,
        "notifyresponse": true,
        "notifywrite": true,
        "notifyreadrequestalsorespondtobus": false,
        "notifyreadrequestalsorespondtobusdefaultvalueifnotinitialized": "0",
        "listenallga": false,
        "name": "Cloth curtains status",
        "outputtype": "update",
        "outputRBE": "false",
        "inputRBE": "true",
        "formatmultiplyvalue": 1,
        "formatnegativevalue": "leave",
        "formatdecimalsvalue": 999,
        "passthrough": "no",
        "x": 370,
        "y": 1460,
        "wires": [
            [
                "a2cbab9841418efb"
            ]
        ]
    },
    {
        "id": "523eccc030d6539d",
        "type": "function",
        "z": "5207b905716868ba",
        "name": "",
        "func": "const sence = flow.get(\"livingroom_cloth_curtains_scene\");\nif (msg.hap.context !== undefined) {\n    if (msg.payload.TargetPosition !== undefined) {\n        let position = 100 - msg.payload.TargetPosition;\n        if (sence === undefined) {\n            flow.set(\"livingroom_cloth_curtains_target\", position);\n            return { payload: position };\n        } else {\n            flow.set(\"livingroom_cloth_curtains_scene\", undefined);\n        }\n    }\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 1460,
        "wires": [
            [
                "0245c61bf2e5658a"
            ]
        ]
    },
    {
        "id": "0245c61bf2e5658a",
        "type": "knxUltimate",
        "z": "5207b905716868ba",
        "server": "1d670c832649ebb6",
        "topic": "2/1/65",
        "setTopicType": "str",
        "outputtopic": "",
        "dpt": "5.001",
        "initialread": 0,
        "notifyreadrequest": false,
        "notifyresponse": false,
        "notifywrite": true,
        "notifyreadrequestalsorespondtobus": false,
        "notifyreadrequestalsorespondtobusdefaultvalueifnotinitialized": "0",
        "listenallga": false,
        "name": "Cloth curtains",
        "outputtype": "write",
        "outputRBE": "false",
        "inputRBE": "false",
        "formatmultiplyvalue": 1,
        "formatnegativevalue": "leave",
        "formatdecimalsvalue": 999,
        "passthrough": "no",
        "x": 1180,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "da1368a3852952a9",
        "type": "function",
        "z": "5207b905716868ba",
        "name": "Clear cloth curtains lock",
        "func": "node.log('receive livingroom cloth curtains sence control:'+msg.payload);\n\nconst source = flow.get(\"livingroom_cloth_curtains_lock\");\n\nif(msg.payload !== 0) {\n    if (source === undefined) {\n        return msg;\n    }\n} else {\n    flow.set(\"livingroom_cloth_curtains_lock\", undefined);\n    flow.set(\"livingroom_cloth_curtains_scene\" , true);\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 1560,
        "wires": [
            [
                "1f81237491184183"
            ]
        ]
    },
    {
        "id": "1f81237491184183",
        "type": "trigger",
        "z": "5207b905716868ba",
        "name": "",
        "op1": "",
        "op2": "",
        "op1type": "nul",
        "op2type": "payl",
        "duration": "15",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 780,
        "y": 1560,
        "wires": [
            [
                "6450eb98399ffe6a"
            ]
        ]
    },
    {
        "id": "6450eb98399ffe6a",
        "type": "trigger",
        "z": "5207b905716868ba",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "pay",
        "op2type": "str",
        "duration": "500",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 990,
        "y": 1560,
        "wires": [
            [
                "ee8309e6cf8aafa1"
            ]
        ]
    },
    {
        "id": "ee8309e6cf8aafa1",
        "type": "function",
        "z": "5207b905716868ba",
        "name": "Set cloth curtains lock",
        "func": "node.log('set livingroom cloth curtains lock:'+msg.payload);\nflow.set(\"livingroom_cloth_curtains_lock\" , true);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 1560,
        "wires": [
            [
                "a19bc0c371c10555"
            ]
        ]
    },
    {
        "id": "47969feca304c3e0",
        "type": "knxUltimate",
        "z": "5207b905716868ba",
        "server": "1d670c832649ebb6",
        "topic": "2/0/65",
        "setTopicType": "str",
        "outputtopic": "",
        "dpt": "5.100",
        "initialread": "0",
        "notifyreadrequest": false,
        "notifyresponse": true,
        "notifywrite": true,
        "notifyreadrequestalsorespondtobus": false,
        "notifyreadrequestalsorespondtobusdefaultvalueifnotinitialized": "0",
        "listenallga": false,
        "name": "Cloth curtains scene status",
        "outputtype": "write",
        "outputRBE": "false",
        "inputRBE": "false",
        "formatmultiplyvalue": 1,
        "formatnegativevalue": "leave",
        "formatdecimalsvalue": 999,
        "passthrough": "no",
        "x": 240,
        "y": 1560,
        "wires": [
            [
                "da1368a3852952a9"
            ]
        ]
    },
    {
        "id": "a19bc0c371c10555",
        "type": "knxUltimate",
        "z": "5207b905716868ba",
        "server": "1d670c832649ebb6",
        "topic": "2/0/65",
        "setTopicType": "str",
        "outputtopic": "",
        "dpt": "5.100",
        "initialread": "0",
        "notifyreadrequest": false,
        "notifyresponse": false,
        "notifywrite": true,
        "notifyreadrequestalsorespondtobus": false,
        "notifyreadrequestalsorespondtobusdefaultvalueifnotinitialized": "0",
        "listenallga": false,
        "name": "Cloth curtains scene",
        "outputtype": "write",
        "outputRBE": "false",
        "inputRBE": "false",
        "formatmultiplyvalue": 1,
        "formatnegativevalue": "leave",
        "formatdecimalsvalue": 999,
        "passthrough": "no",
        "x": 1520,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "b40c437ba7dc34d1",
        "type": "homekit-bridge",
        "bridgeName": "Living room",
        "pinCode": "6923-5024",
        "port": "",
        "advertiser": "bonjour-hap",
        "allowInsecureRequest": false,
        "manufacturer": "NRCHKB",
        "model": "1.6.1",
        "serialNo": "Default Serial Number",
        "firmwareRev": "1.6.1",
        "hardwareRev": "1.6.1",
        "softwareRev": "1.6.1",
        "customMdnsConfig": false,
        "mdnsMulticast": true,
        "mdnsInterface": "",
        "mdnsPort": "",
        "mdnsIp": "",
        "mdnsTtl": "",
        "mdnsLoopback": true,
        "mdnsReuseAddr": true,
        "allowMessagePassthrough": true
    },
    {
        "id": "1d670c832649ebb6",
        "type": "knxUltimate-config",
        "host": "192.168.1.7",
        "port": "3671",
        "physAddr": "14.14.14",
        "hostProtocol": "TunnelUDP",
        "suppressACKRequest": true,
        "csv": "",
        "KNXEthInterface": "Auto",
        "KNXEthInterfaceManuallyInput": "",
        "stopETSImportIfNoDatapoint": "skip",
        "loglevel": "error",
        "name": "KNX Gateway",
        "localEchoInTunneling": true,
        "delaybetweentelegrams": "50",
        "delaybetweentelegramsfurtherdelayREAD": "1",
        "ignoreTelegramsWithRepeatedFlag": true,
        "keyringFileXML": "",
        "knxSecureSelected": false,
        "autoReconnect": "yes"
    }
]